{"version":3,"sources":["components/main app/Body.module.css","components/login/Login.js","components/main app/Body.js","App.js","index.js","components/login/Login.module.css"],"names":["module","exports","Login","useEffect","window","location","hash","authParamsObj","substring","split","reduce","accumulator","currentValue","key","value","length","console","log","error","access_token","localStorage","setItem","Date","expires_in","className","classes","loginPage","navbar","body","loginCard","onClick","url","Body","useState","userPlaylists","featuredPlaylists","lists","setLists","featuredPlaylistURL","loginAgain","removeItem","getItem","prevState","JSON","parse","token","curDate","alert","Math","abs","parseInt","axios","get","headers","Authorization","then","response","data","items","arr","playlists","idArray","map","playlist","id","toRemoveSet","Set","filter","has","catch","err","getPlaylistHandler","onDragEnd","result","source","destination","featureItems","userItems","droppableId","splice","index","item","section","playlistsHead","provided","snapshot","ref","innerRef","droppableProps","draggableId","draggableProps","dragHandleProps","listItem","images","src","alt","name","placeholder","controlButtons","stringify","App","loggedin","setLoggedin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5815b9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__1cbFo\",\"navbar\":\"Body_navbar__4EtRh\",\"section\":\"Body_section__qFuia\",\"playlistsHead\":\"Body_playlistsHead__1p9nR\",\"featuredPlaylists\":\"Body_featuredPlaylists__2oCKt\",\"userPlaylists\":\"Body_userPlaylists__3Layj\",\"listItem\":\"Body_listItem__3bwpc\",\"controlButtons\":\"Body_controlButtons__1Kk26\"};","import { useEffect } from \"react\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nlet url = \"https://accounts.spotify.com/authorize?\";\r\nurl += \"client_id=\" + \"b62100f5a45b4136aff25a6e265201ea&\";\r\nurl += \"redirect_uri=\" + \"http://localhost:3000/&\";\r\nurl += \"response_type=\" + \"token&\";\r\nurl += \"show_dialog&\";\r\nurl +=\r\n  \"scope=\" +\r\n  \"playlist-modify-private%20playlist-read-private%20playlist-modify-public%20playlist-read-collaborative\";\r\n\r\nconst getAuthParams = (hashString) => {\r\n  hashString = hashString.substring(1);\r\n  const authParams = hashString.split(\"&\");\r\n  const authParamsObj = authParams.reduce((accumulator, currentValue) => {\r\n    const [key, value] = currentValue.split(\"=\");\r\n    accumulator[key] = value;\r\n    return accumulator;\r\n  }, {});\r\n  return authParamsObj;\r\n};\r\n\r\nconst Login = () => {\r\n  useEffect(() => {\r\n    if (window.location.hash) {\r\n      const authParamsObj = getAuthParams(window.location.hash);\r\n      window.location.hash = \"\";\r\n      if (authParamsObj.length < 3) {\r\n        console.log(authParamsObj.error);\r\n      } else {\r\n        console.log(authParamsObj.access_token);\r\n        localStorage.setItem(\"accessToken\", authParamsObj.access_token);\r\n        localStorage.setItem(\"authDate\", new Date());\r\n        localStorage.setItem(\"expireTime\", authParamsObj.expires_in);\r\n        window.location = \"http://localhost:3000/\";\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = () => {\r\n    window.location = url;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.loginPage}>\r\n      <div className={classes.navbar}>Playlist Chooser</div>\r\n      <div className={classes.body}>\r\n        <div className={classes.loginCard}>\r\n          <div>Login to your Spotify account</div>\r\n          <button onClick={loginHandler}>Login</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useState, useEffect } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport axios from \"axios\";\r\nimport classes from \"./Body.module.css\";\r\nimport { getDefaultNormalizer } from \"@testing-library/dom\";\r\n\r\nconst Body = () => {\r\n  let [lists, setLists] = useState({\r\n    userPlaylists: [],\r\n    featuredPlaylists: [],\r\n  });\r\n\r\n  const userPlaylistURL = \"https://api.spotify.com/v1/me/playlists\";\r\n  const featuredPlaylistURL =\r\n    \"https://api.spotify.com/v1/browse/featured-playlists\";\r\n\r\n  const loginAgain = () => {\r\n    localStorage.removeItem(\"expireTime\");\r\n    localStorage.removeItem(\"accessToken\");\r\n    localStorage.removeItem(\"authDate\");\r\n    window.location = \"http://localhost:3000/\";\r\n  };\r\n\r\n  const getPlaylistHandler = (url) => {\r\n    const token = localStorage.getItem(\"accessToken\");\r\n    const curDate = new Date();\r\n\r\n    if (token == null) {\r\n      alert(\"You are not logged in.\");\r\n      loginAgain();\r\n    } else if (\r\n      Math.abs(curDate - new Date(localStorage.getItem(\"authDate\"))) / 1000 >\r\n      parseInt(localStorage.getItem(\"expireTime\"))\r\n    ) {\r\n      loginAgain();\r\n    } else {\r\n      axios\r\n        .get(url, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (url === userPlaylistURL) {\r\n            console.log(\"user\", response.data.items);\r\n            setLists((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                userPlaylists: response.data.items,\r\n              };\r\n            });\r\n          } else if (url === featuredPlaylistURL) {\r\n            let arr = response.data.playlists.items;\r\n            // removing common elements\r\n            if (localStorage.getItem(\"userPlaylists\")) {\r\n              let idArray = JSON.parse(\r\n                localStorage.getItem(\"userPlaylists\")\r\n              ).map((playlist) => {\r\n                return playlist.id;\r\n              });\r\n\r\n              let toRemoveSet = new Set(idArray);\r\n\r\n              arr = arr.filter((playlist) => {\r\n                return !toRemoveSet.has(playlist.id);\r\n              });\r\n            }\r\n\r\n            setLists((prevState) => {\r\n              return {\r\n                ...prevState,\r\n                featuredPlaylists: arr,\r\n              };\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const getUserPlaylists = () => {\r\n    if (localStorage.getItem(\"userPlaylists\")) {\r\n      setLists((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          userPlaylists: JSON.parse(localStorage.getItem(\"userPlaylists\")),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserPlaylists();\r\n    getPlaylistHandler(featuredPlaylistURL);\r\n    // getPlaylistHandler(userPlaylistURL);\r\n  }, []);\r\n\r\n  const saveHandler = () => {\r\n    // console.log(lists.userPlaylists);\r\n    lists.userPlaylists = lists.userPlaylists.filter((playlist) => {\r\n      return playlist.id !== \"dummyId\";\r\n    });\r\n    localStorage.setItem(\"userPlaylists\", JSON.stringify(lists.userPlaylists));\r\n  };\r\n\r\n  const onDragEndFeaturedList = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    let featureItems = lists.featuredPlaylists;\r\n    let userItems = lists.userPlaylists;\r\n    if (source.droppableId === \"featuredListDroppable\") {\r\n      let [item] = featureItems.splice(source.index, 1);\r\n      if (destination.droppableId === \"userListDroppable\") {\r\n        if (userItems) userItems.splice(destination.index, 0, item);\r\n      } else if (destination.droppableId === \"featuredListDroppable\") {\r\n        featureItems.splice(destination.index, 0, item);\r\n      }\r\n    } else if (source.droppableId === \"userListDroppable\") {\r\n      let [item] = userItems.splice(source.index, 1);\r\n      if (destination.droppableId === \"featuredListDroppable\") {\r\n        featureItems.splice(destination.index, 0, item);\r\n      } else if (destination.droppableId === \"userListDroppable\") {\r\n        if (userItems) userItems.splice(destination.index, 0, item);\r\n      }\r\n    }\r\n    setLists({\r\n      userPlaylists: userItems,\r\n      featuredPlaylists: featureItems,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEndFeaturedList}>\r\n      <div className={classes.body}>\r\n        <div className={classes.navbar}>Playlist Chooser</div>\r\n\r\n        <div className={classes.section}>\r\n          <div>\r\n            <div className={classes.playlistsHead}>Featured playlists</div>\r\n            <Droppable droppableId=\"featuredListDroppable\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className={classes.featuredPlaylists}\r\n                >\r\n                  {lists.featuredPlaylists.map((playlist, index) => {\r\n                    return (\r\n                      <Draggable\r\n                        key={playlist.id}\r\n                        draggableId={playlist.id}\r\n                        index={index}\r\n                      >\r\n                        {(provided, snapshot) => (\r\n                          <div\r\n                            ref={provided.innerRef}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            className={classes.listItem}\r\n                            id={playlist.id}\r\n                          >\r\n                            <img\r\n                              source={playlist.images[0].url}\r\n                              src={playlist.images[0].url}\r\n                              alt=\"playlist image\"\r\n                            />\r\n                            <div>{playlist.name}</div>\r\n                          </div>\r\n                        )}\r\n                      </Draggable>\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n\r\n          <div>\r\n            <div className={classes.playlistsHead}>My playlists</div>\r\n            <Droppable droppableId=\"userListDroppable\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className={classes.userPlaylists}\r\n                >\r\n                  {lists.userPlaylists == null ? (\r\n                    <div>No playlists found</div>\r\n                  ) : (\r\n                    <div></div>\r\n                  )}\r\n                  <div>\r\n                    {lists.userPlaylists.map((playlist, index) => {\r\n                      return (\r\n                        <Draggable\r\n                          key={playlist.id}\r\n                          draggableId={playlist.id}\r\n                          index={index}\r\n                        >\r\n                          {(provided, snapshot) => (\r\n                            <div\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              className={classes.listItem}\r\n                              id={playlist.id}\r\n                            >\r\n                              {/* <img\r\n                                source={playlist.imageUrl}\r\n                                src={playlist.imageUrl}\r\n                                alt=\"playlist image\"\r\n                              /> */}\r\n                              <img\r\n                                src={playlist.images[0].url}\r\n                                alt=\"playlist image\"\r\n                              />\r\n                              <div>{playlist.name}</div>\r\n                            </div>\r\n                          )}\r\n                        </Draggable>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.controlButtons}>\r\n          <button onClick={saveHandler}>Save</button>\r\n        </div>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/login/Login\";\nimport Body from \"./components/main app/Body\";\n\nfunction App() {\n  let [loggedin, setLoggedin] = useState(false);\n  // localStorage.clear();\n  if (localStorage.getItem(\"accessToken\") !== null && loggedin === false) {\n    setLoggedin(true);\n  } else if (\n    localStorage.getItem(\"accessToken\") === null &&\n    loggedin === true\n  ) {\n    setLoggedin(false);\n  }\n  return <div className=\"app\">{loggedin ? <Body /> : <Login />}</div>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__tCIA8\",\"navbar\":\"Login_navbar__2KHqk\",\"body\":\"Login_body__Mp-3c\",\"loginCard\":\"Login_loginCard__25C0p\"};"],"sourceRoot":""}